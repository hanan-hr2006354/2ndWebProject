// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

generator dbml {
  provider = "prisma-dbml-generator"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Customer {
  id              Int      @id @default(autoincrement())
  name            String
  surname         String
  username        String   @unique
  shippingAddress String
  password        String
  balance         Int
  location        String
  purchases       Purchase[]
}


model Seller {
  id          Int       @id @default(autoincrement())
  companyName String
  username    String    @unique
  password    String
  bankAccount String
  sellings    Selling[]
}

model Admin {
  id       Int    @id @default(autoincrement())
  username String @unique
  password String
}

model Selling {
  id       Int        @id @default(autoincrement())
  sellerId Int
  itemId   Int
  quantity Int
  seller   Seller     @relation(fields: [sellerId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  item     Item       @relation(fields: [itemId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  purchase Purchase[]
}

model Purchase {
  id         Int      @id @default(autoincrement())
  customerId Int
  sellingId  Int?     // Optional: link to a Selling entry
  itemId     Int
  quantity   Int
  date       DateTime // Date when the purchase was made, time is not considered
  location   String   // Location where the purchase was made or delivered
  customer   Customer @relation(fields: [customerId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  item       Item     @relation(fields: [itemId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  selling    Selling? @relation(fields: [sellingId], references: [id], onDelete: SetNull, onUpdate: Cascade)
}


model Category {
  id    Int    @id @default(autoincrement())
  name  String
  items Item[]
}

model Item {
  id         Int        @id @default(autoincrement())
  name       String
  price      Int
  image      String
  quantity   Int
  categoryId Int
  category   Category   @relation(fields: [categoryId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  purchases  Purchase[]
  sellings   Selling[]
}
